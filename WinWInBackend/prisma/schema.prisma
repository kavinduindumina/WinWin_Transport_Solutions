// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id              Int         @id @default(autoincrement())
  email           String      @unique
  fullName        String
  profileImage    String      @default("null")
  username        String      @unique
  otp             String?
  isEmailVerified Boolean
  role            String      @default("admin")
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  deletedAt       DateTime?
  passenger       Passenger[]
}

model Rides {
  id                 Int       @id @default(autoincrement())
  driverId           Int?
  driver             Drivers?  @relation(fields: [driverId], references: [id])
  vehicleId          Int?
  vehicle            Vehicle?  @relation(fields: [vehicleId], references: [id])
  passengerId        Int?
  passenger          Passenger? @relation(fields: [passengerId], references: [id])
  pickupLocation     String
  dropLocation       String
  duration           String
  distance           String
  cost               String?
  platformCommission Float?
  status             String    @default("pending")
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  deletedAt          DateTime?
}

model Passenger {
  id                   Int            @id @default(autoincrement())
  email                String         @unique
  fullName             String
  username             String         @unique @default("null")
  nic                  String         @unique
  phone                String
  address              String
  password             String?
  isEmailVerified      Boolean?       @default(false)
  status               String?        @default("pending")
  isTemporary          Boolean        @default(false)
  role                 String         @default("passenger")
  profileImage         String         @default("https://firebasestorage.googleapis.com/v0/b/taxiservice-3547e.appspot.com/o/uploads%2F9220769.png?alt=media&token=f5e436ef-dbfd-4c5c-b9ae-998d30d01b42")
  adminId              Int?
  admin                Admin?         @relation(fields: [adminId], references: [id])
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  deletedAt            DateTime?
  rides                Rides[]

  driverRatings driverRatings[]
}

model PhoneOperator {
  id              Int         @id @default(autoincrement())
  email           String      @unique
  fullName        String
  username        String      @unique
  nic             String      @unique
  password        String
  phone           String
  address         String
  isEmailVerified Boolean     @default(false)
  profileImage    String      @default("https://firebasestorage.googleapis.com/v0/b/taxiservice-3547e.appspot.com/o/uploads%2F896334.png?alt=media&token=f330e7b4-ca6e-441d-b4ee-321f956ae06c")
  role            String      @default("phone_operator")
  status          String?     @default("pending")
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  deletedAt       DateTime?
}

model Drivers {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  username        String?    @unique
  nic             String    @unique
  phone           String
  password        String
  isEmailVerified Boolean?
  profileImage    String    @default("https://firebasestorage.googleapis.com/v0/b/taxiservice-3547e.appspot.com/o/uploads%2F8583437.png?alt=media&token=1ca1802e-a46b-4622-89e1-257e76d71481")
  status          String?   @default("pending")
  role            String    @default("driver")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  rides           Rides[]
  vehicles        Vehicle[]

  driverRatings driverRatings[]
}

model Vehicle {
  id                Int       @id @default(autoincrement())
  vehicleNumber     String    @unique
  vehicleType       String
  vehicleModel      String
  vehicleColor      String
  vehicleOwner      String?
  SeatingCapacity   Int       @default(0)
  ImagePath         String?
  isVehicleVerified Boolean   @default(false)
  status            String?   @default("pending")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  deletedAt         DateTime?
  driverId          Int?
  driver            Drivers? @relation(fields: [driverId], references: [id])
  rides             Rides[]
}

model Rates {
  id        Int       @id @default(autoincrement())
  rate      String
  vehicleType String
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model PlatformRates {
  id        Int       @id @default(autoincrement())
  rate      Float     @default(0)
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model driverRatings {
  id          Int       @id @default(autoincrement())
  driverId    Int
  driver      Drivers   @relation(fields: [driverId], references: [id])
  passengerId Int
  passenger   Passenger @relation(fields: [passengerId], references: [id])
  rating      Int
  comment     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}